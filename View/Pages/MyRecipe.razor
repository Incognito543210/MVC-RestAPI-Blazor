@page "/myrecipe/{Id:int}"
@inject NavigationManager NavMan
@inject RecipeService RecServ
@inject IDialogService DialogService
@inject OpinionService OpsServ

@if (recipe == null)
{
    <h3>Loading...</h3>
}
else
{
    <div id="top">
        <div id="title">
            <h3 style="font-weight: bold">@recipe.Title</h3>
        </div>        
        <div id="buttons">
            <MudButton OnClick="Update" Variant="Variant.Filled" Class="btn-update">Edytuj</MudButton>
            <MudButton OnClick="ConfirmDeletion" Variant="Variant.Filled" Class="btn-delete">Usuń</MudButton>
        </div>
    </div>

    <div id="info">
        <div id="description">
            <p>
                <b>Czas przygotowania: </b>@recipe.PrepareTime.TimeOfDay<br />
                <b>Porcje: </b>@recipe.Portions<br />
                <b>Trudność: </b>@recipe.Difficulty/5<br />
            </p>
        </div>
    </div>

    <div id="buttons" >
        @if (tagsList.Any())
        {
            foreach (var item in tagsList)
            {
                <MudButton Variant="Variant.Filled" Class="btn-tag">@item.Name</MudButton>
                <p>
                    &nbsp;&nbsp;
                </p>
            }
        }
    </div>

    <div id="ingridients">
        <div id="sec-title">
            <p>SKŁADNIKI</p>
        </div>
        @if (ingredientsList == null)
        {
            <p>Ten przepis nie ma żadnych składników</p>
        }
        else
        {
            @if (ingredientsList.Any())
            {
                <table class="table table-striped table-hover" style="margin-left: 20px; margin-right: 40px">
                    <thead>
                        <tr>
                            <th>Składnik</th>
                            <th>Ilość</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ingredientsList)
                        {
                            <tr>
                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    @item.Quantity
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    </div>

    <div id="preparation">
        <div id="sec-title">
            <p>PRZYGOTOWANIE</p>
        </div>
        @if(recipe.Content == "")
        {
            <p>Ten przepis nie ma procesu przygotowania</p>
        }
        else
        {
            <p style="margin-left: 30px; margin-right: 30px; font-size: 1.17em;"><MudList>@recipe.Content</MudList></p>
        }
    </div>
}

<style>
    #top {
        width: auto;
        margin: 10px;
        padding: 5px;
        align-content: center;
        display: flex;
        justify-content: space-between;
    }

    #title {
        flex: 1;
    }

    h3 {
        margin: 0;
        padding: 0;
    }

    #recipe {
        display: flex;
        flex-direction: row;
    }

    #buttons {
        display: flex;
        justify-content: flex-end;
    }

    .btn-update, .btn-delete {
        font-size: 1.17em;
        color: white;
        margin-left: 8px;
    }

    .btn-tag {
        background: rgba(227, 225, 222);
        margin-right: 5px;
        font-size: 1.17em;
    }

    .btn-update {
        background: rgba( 22, 166, 185 );
        margin-right: 5px;
    }

    .btn-delete {
        background: red;
        margin-right: 5px;
    }

        .btn-update:hover, .btn-delete:hover {
            background-color: rgba(227, 225, 222);
        }

    #sec-title {
        background-color: rgba( 22, 166, 185 );
        width: auto;
        border-radius: 8px;
        margin: 10px;
        padding: 10px;
        font-size: 1.17em;
        font-weight: bolder;
        display: flex;
        align-items: center;
    }

    #info {
        display: flex;
        flex-direction: row;
    }

    #description {
        float: left;
        margin-left: 10px;
    }

    p {
        margin: 0;
        padding: 0;
    }

    ul {
        list-style-type: disc;
        margin-left: 40px;
    }
</style>

@code {
    [Parameter]
    public int Id { get; set; }

    private RecipeAdapter? recipe;
    private List<IngridientDto>? ingredientsList;
    private List<TagDto>? tagsList;
    private List<OpinionDto>? opinionsList;
    OpinionDto opinion = new() { Rate = 1 };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //recipe = await RecServ.GetRecipeAsync(Id);
        //ingredientsList = await RecServ.GetIngredientsListAsync(Id);
        //await base.OnInitializedAsync();
        await GetRecipe(Id);
        //recipe = await RecServ.GetRecipeAsync(Id);
        //ingredientsList = await RecServ.GetIngredientsListAsync(Id);
        opinionsList = await OpsServ.GetOpinionsForRecipeAsync(Id);
    }

    void Update()
    {
        if(recipe is not null)
        {
            NavMan.NavigateTo("/updaterecipe/" + recipe.RecipeID);
        }
    }

    async Task Delete()
    {
        if (recipe is not null)
        {
            await RecServ.DeleteRecipeById(recipe.RecipeID);
            NavMan.NavigateTo("/mybook");
        }
    }

    async Task ConfirmDeletion()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var okno = await DialogService.ShowAsync<ConfirmDeletion>("Usuń przepis", options);
        var wynik = await okno.Result;
        if(!wynik.Canceled)
        {
            await Delete(); 
        }
    }

    async Task<RecipeAdapter> GetRecipe(int id)
    {
        HasIngridientDto hasIngrid = new();
        recipe = await RecServ.GetRecipeAsync(id);
        List<IngridientDto> ingredients = await RecServ.GetIngredientsListAsync(id);
        List<TagDto> tags = await RecServ.GetTagsListAsync(id);
        ingredientsList = ingredients;
        tagsList = tags;
        foreach (var item in ingredientsList)
        {
            hasIngrid = await RecServ.GetIngredientAmountAsync(recipe.RecipeID, item.IngridientID);
            item.Quantity = hasIngrid.Amount;
        }
        return recipe;
}
}