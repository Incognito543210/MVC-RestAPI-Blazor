@page "/myrecipe/{Id:int}"
@inject NavigationManager NavMan
@inject RecipeService RecServ
@inject IDialogService DialogService

@if (recipe == null)
{
    <h3>Loading...</h3>
}
else
{
    <div id="top">
        <div id="title">
            <h3 style="font-weight: bold">@recipe.Title</h3>
        </div>
        <div id="buttons">
            <MudButton class="btn1" @onclick="Update">Edytuj</MudButton>
            <MudButton class="btn2" @onclick="ConfirmDeletion">Usuń</MudButton>
        </div>
    </div>

    <div id="info">
        <img src="https://wszystkiegoslodkiego.pl/storage/images/201922/letni-tort-bezowy.webp">
        <div id="description">
            <p>
                <b>Czas przygotowania: </b>@recipe.PrepareTime<br />
                <b>Porcje: </b>@recipe.Portions<br />
                <b>Trudność: </b>@recipe.Difficulty/5<br />
            </p>
        </div>
    </div>

    <div id="ingridients">
        <div id="sec-title">
            <p>SKŁADNIKI</p>
        </div>
        @if (ingredientsList == null)
        {
            <p>Ten przepis nie ma żadnych składników</p>
        }
        else
        {
            @if (ingredientsList.Any())
            {
                <ul>
                    @foreach (var ingridient in ingredientsList)
                    {
                        <li>@ingridient.Name</li>
                    }
                </ul>
            }
        }
    </div>

    <div id="preparation">
        <div id="sec-title">
            <p>PRZYGOTOWANIE</p>
        </div>
        @if(recipe.Content == "")
        {
            <p>Ten przepis nie ma procesu przygotowania</p>
        }
        else
        {
            <p style="margin-left: 30px; margin-right: 30px;">@recipe.Content</p>
        }
    </div>
}

<style>
    #top {
        width: auto;
        margin: 10px;
        padding: 5px;
        align-content: center;
        display: flex;
        justify-content: space-between;
    }

    #title {
        flex: 1;
    }

    h3 {
        margin: 0;
        padding: 0;
    }

    #recipe {
        display: flex;
        flex-direction: row;
    }

    #buttons {
        display: flex;
        justify-content: flex-end;
    }

    .btn1, .btn2 {
        background: rgba( 22, 166, 185 );
        padding: 10px;
        float: right;
        border-radius: 8px;
        font-size: 1.17em;
        color: white;
    }

    .btn1 {
        margin-right: 5px;
    }

        .btn1:hover, .btn2:hover {
            background-color: rgba(227, 225, 222);
        }

    #sec-title {
        background-color: rgba( 22, 166, 185 );
        width: auto;
        border-radius: 8px;
        margin: 10px;
        padding: 10px;
        font-size: 1.17em;
        font-weight: bolder;
        display: flex;
        align-items: center;
    }

    #info {
        display: flex;
        flex-direction: row;
    }

    #description {
        float: left;
    }

    p {
        margin: 0;
        padding: 0;
    }

    img {
        float: left;
        margin-bottom: 20px;
        margin-left: 10px;
        margin-right: 20px;
        border-radius: 8px;
        height: 100px;
    }

    ul {
        list-style-type: disc;
        margin-left: 40px;
    }
</style>

@code {
    [Parameter]
    public int Id { get; set; }

    private RecipeAdapter? recipe;
    private List<IngridientDto>? ingredientsList;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        recipe = await RecServ.GetRecipeAsync(Id);
        ingredientsList = await RecServ.GetIngredientsListAsync(Id);
    }

    void Update()
    {
        if(recipe is not null)
        {
            NavMan.NavigateTo("/updaterecipe/" + recipe.RecipeID);
        }
    }

    async void Delete()
    {
        if (recipe is not null)
        {
            await RecServ.DeleteRecipeById(recipe.RecipeID);
            NavMan.NavigateTo("/mybook");
        }
    }

    async private void ConfirmDeletion()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var wynik = await DialogService.ShowAsync<ConfirmDeletion>("Usuń przepis");
        if(!wynik.Result.IsCanceled)
        {
            Delete(); 
        }
    }
}